"""
Django settings for config project.

Generated by 'django-admin startproject' using Django 5.2.

Este arquivo foi configurado para funcionar tanto em desenvolvimento quanto em produ√ß√£o.
Quando as vari√°veis de ambiente n√£o est√£o dispon√≠veis, valores padr√£o seguros para 
desenvolvimento s√£o utilizados automaticamente.

Para produ√ß√£o, certifique-se de definir as seguintes vari√°veis de ambiente:
- DJANGO_SECRET_KEY: Uma chave secreta segura
- DEBUG: False
- ALLOWED_HOSTS: Lista de hosts permitidos
- ENGINE: Engine do banco de dados (ex: django.db.backends.postgresql)
- DB_NAME, DB_USER, DB_PASSWORD, DB_HOST, DB_PORT: Configura√ß√µes do banco

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

import os
from pathlib import Path

import environ

# Configura√ß√£o do environ com valores padr√£o para desenvolvimento
env = environ.Env(
    DEBUG=(bool, True),  # Padr√£o True para desenvolvimento
    DJANGO_SECRET_KEY=(str, 'django-insecure-dev-key-change-in-production-123456789'),
    ALLOWED_HOSTS=(list, ['localhost', '127.0.0.1', '0.0.0.0', '172.27.240.1', '192.168.1.5']),
    ENGINE=(str, 'django.db.backends.sqlite3'),
    DB_NAME=(str, 'db.sqlite3'),
    DB_USER=(str, ''),
    DB_PASSWORD=(str, ''),
    DB_HOST=(str, ''),
    DB_PORT=(str, ''),
)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Tenta ler o arquivo .env, mas n√£o falha se n√£o existir
try:
    environ.Env.read_env(os.path.join(BASE_DIR.parent, ".env"))
except FileNotFoundError:
    print("Arquivo .env n√£o encontrado. Usando configura√ß√µes padr√£o para desenvolvimento.")


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = env("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = env("DEBUG")

ALLOWED_HOSTS = env.list("ALLOWED_HOSTS")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    # Third party apps
    "rest_framework",
    "rest_framework_simplejwt",
    "corsheaders",
    # Local apps
    "core",
    "activities",
]

# Configura√ß√µes do DRF
REST_FRAMEWORK = {
    "DEFAULT_AUTHENTICATION_CLASSES": [
        "rest_framework_simplejwt.authentication.JWTAuthentication",
    ],
}

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "corsheaders.middleware.CorsMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# Configura√ß√µes do CORS
CORS_ALLOWED_ORIGINS = [
    "http://localhost:55535",
    "http://localhost:3000",
    "http://localhost:80",
    "http://localhost:8081",
    "http://localhost",
    "http://0.0.0.0",
    "http://172.27.240.1:8000",
]

# Em desenvolvimento, permite CORS de qualquer origem se DEBUG estiver ativo
if DEBUG:
    CORS_ALLOW_ALL_ORIGINS = True

CORS_ALLOW_METHODS = [
    "DELETE",
    "GET",
    "OPTIONS",
    "PATCH",
    "POST",
    "PUT",
]

ROOT_URLCONF = "config.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "config.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

# Configura√ß√£o do banco de dados com fallback para SQLite em desenvolvimento
DATABASES = {
    "default": {
        "ENGINE": env("ENGINE"),
        "NAME": env("DB_NAME") if env("ENGINE") != 'django.db.backends.sqlite3' else BASE_DIR / env("DB_NAME"),
        "USER": env("DB_USER"),
        "PASSWORD": env("DB_PASSWORD"),
        "HOST": env("DB_HOST"),
        "PORT": env("DB_PORT"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = "pt-br"

TIME_ZONE = "America/Sao_Paulo"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = "/static/"

# Diret√≥rio onde os arquivos est√°ticos ser√£o coletados
STATIC_ROOT = BASE_DIR / "staticfiles"

# Diret√≥rio adicional para arquivos est√°ticos
STATICFILES_DIRS = [
    BASE_DIR / "static",
]

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
AUTH_USER_MODEL = "core.User"

# Configura√ß√µes espec√≠ficas para desenvolvimento
if DEBUG:
    # Permite acesso ao Django Admin sem HTTPS em desenvolvimento
    SECURE_SSL_REDIRECT = False
    
    # Configura√ß√µes de logging para desenvolvimento
    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'root': {
            'handlers': ['console'],
            'level': 'INFO',
        },
        'loggers': {
            'django': {
                'handlers': ['console'],
                'level': 'INFO',
                'propagate': False,
            },
        },
    }
    
    print(f"üöÄ Django rodando em modo DEBUG com SECRET_KEY: {SECRET_KEY[:20]}...")
    print(f"üìä Banco de dados: {DATABASES['default']['ENGINE']}")
    if DATABASES['default']['ENGINE'] == 'django.db.backends.sqlite3':
        print(f"üìÅ Arquivo SQLite: {DATABASES['default']['NAME']}")
    else:
        print(f"üóÑÔ∏è  Banco: {DATABASES['default']['NAME']} em {DATABASES['default']['HOST']}")
